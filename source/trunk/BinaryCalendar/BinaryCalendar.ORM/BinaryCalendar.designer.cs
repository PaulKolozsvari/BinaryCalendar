#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BinaryCalendar.ORM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BinaryCalendar")]
	public partial class BinaryCalendarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmailNotification(EmailNotification instance);
    partial void UpdateEmailNotification(EmailNotification instance);
    partial void DeleteEmailNotification(EmailNotification instance);
    partial void InsertEmailNotificationAttachment(EmailNotificationAttachment instance);
    partial void UpdateEmailNotificationAttachment(EmailNotificationAttachment instance);
    partial void DeleteEmailNotificationAttachment(EmailNotificationAttachment instance);
    partial void InsertEmailNotificationRecipient(EmailNotificationRecipient instance);
    partial void UpdateEmailNotificationRecipient(EmailNotificationRecipient instance);
    partial void DeleteEmailNotificationRecipient(EmailNotificationRecipient instance);
    partial void InsertServerAction(ServerAction instance);
    partial void UpdateServerAction(ServerAction instance);
    partial void DeleteServerAction(ServerAction instance);
    partial void InsertServerError(ServerError instance);
    partial void UpdateServerError(ServerError instance);
    partial void DeleteServerError(ServerError instance);
    partial void InsertPublicHoliday(PublicHoliday instance);
    partial void UpdatePublicHoliday(PublicHoliday instance);
    partial void DeletePublicHoliday(PublicHoliday instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public BinaryCalendarDataContext() : 
				base(global::BinaryCalendar.ORM.Properties.Settings.Default.BinaryCalendarConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BinaryCalendarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BinaryCalendarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BinaryCalendarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BinaryCalendarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmailNotification> EmailNotifications
		{
			get
			{
				return this.GetTable<EmailNotification>();
			}
		}
		
		public System.Data.Linq.Table<EmailNotificationAttachment> EmailNotificationAttachments
		{
			get
			{
				return this.GetTable<EmailNotificationAttachment>();
			}
		}
		
		public System.Data.Linq.Table<EmailNotificationRecipient> EmailNotificationRecipients
		{
			get
			{
				return this.GetTable<EmailNotificationRecipient>();
			}
		}
		
		public System.Data.Linq.Table<ServerAction> ServerActions
		{
			get
			{
				return this.GetTable<ServerAction>();
			}
		}
		
		public System.Data.Linq.Table<ServerError> ServerErrors
		{
			get
			{
				return this.GetTable<ServerError>();
			}
		}
		
		public System.Data.Linq.Table<PublicHoliday> PublicHolidays
		{
			get
			{
				return this.GetTable<PublicHoliday>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailNotification")]
	public partial class EmailNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmailNotificationId;
		
		private string _Subject;
		
		private string _Body;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<EmailNotificationAttachment> _EmailNotificationAttachments;
		
		private EntitySet<EmailNotificationRecipient> _EmailNotificationRecipients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailNotificationIdChanging(System.Guid value);
    partial void OnEmailNotificationIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public EmailNotification()
		{
			this._EmailNotificationAttachments = new EntitySet<EmailNotificationAttachment>(new Action<EmailNotificationAttachment>(this.attach_EmailNotificationAttachments), new Action<EmailNotificationAttachment>(this.detach_EmailNotificationAttachments));
			this._EmailNotificationRecipients = new EntitySet<EmailNotificationRecipient>(new Action<EmailNotificationRecipient>(this.attach_EmailNotificationRecipients), new Action<EmailNotificationRecipient>(this.detach_EmailNotificationRecipients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmailNotificationId
		{
			get
			{
				return this._EmailNotificationId;
			}
			set
			{
				if ((this._EmailNotificationId != value))
				{
					this.OnEmailNotificationIdChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationId = value;
					this.SendPropertyChanged("EmailNotificationId");
					this.OnEmailNotificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailNotification_EmailNotificationAttachment", Storage="_EmailNotificationAttachments", ThisKey="EmailNotificationId", OtherKey="EmailNotificationId")]
		public EntitySet<EmailNotificationAttachment> EmailNotificationAttachments
		{
			get
			{
				return this._EmailNotificationAttachments;
			}
			set
			{
				this._EmailNotificationAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailNotification_EmailNotificationRecipient", Storage="_EmailNotificationRecipients", ThisKey="EmailNotificationId", OtherKey="EmailNotificationId")]
		public EntitySet<EmailNotificationRecipient> EmailNotificationRecipients
		{
			get
			{
				return this._EmailNotificationRecipients;
			}
			set
			{
				this._EmailNotificationRecipients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmailNotificationAttachments(EmailNotificationAttachment entity)
		{
			this.SendPropertyChanging();
			entity.EmailNotification = this;
		}
		
		private void detach_EmailNotificationAttachments(EmailNotificationAttachment entity)
		{
			this.SendPropertyChanging();
			entity.EmailNotification = null;
		}
		
		private void attach_EmailNotificationRecipients(EmailNotificationRecipient entity)
		{
			this.SendPropertyChanging();
			entity.EmailNotification = this;
		}
		
		private void detach_EmailNotificationRecipients(EmailNotificationRecipient entity)
		{
			this.SendPropertyChanging();
			entity.EmailNotification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailNotificationAttachment")]
	public partial class EmailNotificationAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmailNotificationAttachmentId;
		
		private string _AttachmentFilePath;
		
		private System.Guid _EmailNotificationId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<EmailNotification> _EmailNotification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailNotificationAttachmentIdChanging(System.Guid value);
    partial void OnEmailNotificationAttachmentIdChanged();
    partial void OnAttachmentFilePathChanging(string value);
    partial void OnAttachmentFilePathChanged();
    partial void OnEmailNotificationIdChanging(System.Guid value);
    partial void OnEmailNotificationIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public EmailNotificationAttachment()
		{
			this._EmailNotification = default(EntityRef<EmailNotification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationAttachmentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmailNotificationAttachmentId
		{
			get
			{
				return this._EmailNotificationAttachmentId;
			}
			set
			{
				if ((this._EmailNotificationAttachmentId != value))
				{
					this.OnEmailNotificationAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationAttachmentId = value;
					this.SendPropertyChanged("EmailNotificationAttachmentId");
					this.OnEmailNotificationAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFilePath", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AttachmentFilePath
		{
			get
			{
				return this._AttachmentFilePath;
			}
			set
			{
				if ((this._AttachmentFilePath != value))
				{
					this.OnAttachmentFilePathChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFilePath = value;
					this.SendPropertyChanged("AttachmentFilePath");
					this.OnAttachmentFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmailNotificationId
		{
			get
			{
				return this._EmailNotificationId;
			}
			set
			{
				if ((this._EmailNotificationId != value))
				{
					if (this._EmailNotification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailNotificationIdChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationId = value;
					this.SendPropertyChanged("EmailNotificationId");
					this.OnEmailNotificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailNotification_EmailNotificationAttachment", Storage="_EmailNotification", ThisKey="EmailNotificationId", OtherKey="EmailNotificationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailNotification EmailNotification
		{
			get
			{
				return this._EmailNotification.Entity;
			}
			set
			{
				EmailNotification previousValue = this._EmailNotification.Entity;
				if (((previousValue != value) 
							|| (this._EmailNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailNotification.Entity = null;
						previousValue.EmailNotificationAttachments.Remove(this);
					}
					this._EmailNotification.Entity = value;
					if ((value != null))
					{
						value.EmailNotificationAttachments.Add(this);
						this._EmailNotificationId = value.EmailNotificationId;
					}
					else
					{
						this._EmailNotificationId = default(System.Guid);
					}
					this.SendPropertyChanged("EmailNotification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailNotificationRecipient")]
	public partial class EmailNotificationRecipient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmailNotificationRecipientId;
		
		private string _RecipientEmailAddress;
		
		private System.Guid _EmailNotificationId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<EmailNotification> _EmailNotification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailNotificationRecipientIdChanging(System.Guid value);
    partial void OnEmailNotificationRecipientIdChanged();
    partial void OnRecipientEmailAddressChanging(string value);
    partial void OnRecipientEmailAddressChanged();
    partial void OnEmailNotificationIdChanging(System.Guid value);
    partial void OnEmailNotificationIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public EmailNotificationRecipient()
		{
			this._EmailNotification = default(EntityRef<EmailNotification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationRecipientId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmailNotificationRecipientId
		{
			get
			{
				return this._EmailNotificationRecipientId;
			}
			set
			{
				if ((this._EmailNotificationRecipientId != value))
				{
					this.OnEmailNotificationRecipientIdChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationRecipientId = value;
					this.SendPropertyChanged("EmailNotificationRecipientId");
					this.OnEmailNotificationRecipientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientEmailAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string RecipientEmailAddress
		{
			get
			{
				return this._RecipientEmailAddress;
			}
			set
			{
				if ((this._RecipientEmailAddress != value))
				{
					this.OnRecipientEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._RecipientEmailAddress = value;
					this.SendPropertyChanged("RecipientEmailAddress");
					this.OnRecipientEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmailNotificationId
		{
			get
			{
				return this._EmailNotificationId;
			}
			set
			{
				if ((this._EmailNotificationId != value))
				{
					if (this._EmailNotification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailNotificationIdChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationId = value;
					this.SendPropertyChanged("EmailNotificationId");
					this.OnEmailNotificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailNotification_EmailNotificationRecipient", Storage="_EmailNotification", ThisKey="EmailNotificationId", OtherKey="EmailNotificationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailNotification EmailNotification
		{
			get
			{
				return this._EmailNotification.Entity;
			}
			set
			{
				EmailNotification previousValue = this._EmailNotification.Entity;
				if (((previousValue != value) 
							|| (this._EmailNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailNotification.Entity = null;
						previousValue.EmailNotificationRecipients.Remove(this);
					}
					this._EmailNotification.Entity = value;
					if ((value != null))
					{
						value.EmailNotificationRecipients.Add(this);
						this._EmailNotificationId = value.EmailNotificationId;
					}
					else
					{
						this._EmailNotificationId = default(System.Guid);
					}
					this.SendPropertyChanged("EmailNotification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerAction")]
	public partial class ServerAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerActionId;
		
		private string _Function;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _UserName;
		
		private string _EntityChanged;
		
		private string _FieldChanged;
		
		private string _OriginalValue;
		
		private string _NewValue;
		
		private string _Comments;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerActionIdChanging(int value);
    partial void OnServerActionIdChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEntityChangedChanging(string value);
    partial void OnEntityChangedChanged();
    partial void OnFieldChangedChanging(string value);
    partial void OnFieldChangedChanged();
    partial void OnOriginalValueChanging(string value);
    partial void OnOriginalValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ServerAction()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerActionId
		{
			get
			{
				return this._ServerActionId;
			}
			set
			{
				if ((this._ServerActionId != value))
				{
					this.OnServerActionIdChanging(value);
					this.SendPropertyChanging();
					this._ServerActionId = value;
					this.SendPropertyChanged("ServerActionId");
					this.OnServerActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Function]", Storage="_Function", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityChanged", DbType="VarChar(50)")]
		public string EntityChanged
		{
			get
			{
				return this._EntityChanged;
			}
			set
			{
				if ((this._EntityChanged != value))
				{
					this.OnEntityChangedChanging(value);
					this.SendPropertyChanging();
					this._EntityChanged = value;
					this.SendPropertyChanged("EntityChanged");
					this.OnEntityChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldChanged", DbType="VarChar(50)")]
		public string FieldChanged
		{
			get
			{
				return this._FieldChanged;
			}
			set
			{
				if ((this._FieldChanged != value))
				{
					this.OnFieldChangedChanging(value);
					this.SendPropertyChanging();
					this._FieldChanged = value;
					this.SendPropertyChanged("FieldChanged");
					this.OnFieldChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalValue", DbType="VarChar(250)")]
		public string OriginalValue
		{
			get
			{
				return this._OriginalValue;
			}
			set
			{
				if ((this._OriginalValue != value))
				{
					this.OnOriginalValueChanging(value);
					this.SendPropertyChanging();
					this._OriginalValue = value;
					this.SendPropertyChanged("OriginalValue");
					this.OnOriginalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="VarChar(250)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(250)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerAction", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ServerActions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ServerActions.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerError")]
	public partial class ServerError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerErrorId;
		
		private string _ErrorMessage;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _UserName;
		
		private string _Comments;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerErrorIdChanging(int value);
    partial void OnServerErrorIdChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ServerError()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerErrorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerErrorId
		{
			get
			{
				return this._ServerErrorId;
			}
			set
			{
				if ((this._ServerErrorId != value))
				{
					this.OnServerErrorIdChanging(value);
					this.SendPropertyChanging();
					this._ServerErrorId = value;
					this.SendPropertyChanged("ServerErrorId");
					this.OnServerErrorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(250)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerError", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ServerErrors.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ServerErrors.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublicHoliday")]
	public partial class PublicHoliday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PublicHolidayId;
		
		private string _CountryCode;
		
		private string _CountryName;
		
		private string _EventName;
		
		private string _DateIdentifier;
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private System.DateTime _HolidayDate;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublicHolidayIdChanging(System.Guid value);
    partial void OnPublicHolidayIdChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnDateIdentifierChanging(string value);
    partial void OnDateIdentifierChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnHolidayDateChanging(System.DateTime value);
    partial void OnHolidayDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public PublicHoliday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicHolidayId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PublicHolidayId
		{
			get
			{
				return this._PublicHolidayId;
			}
			set
			{
				if ((this._PublicHolidayId != value))
				{
					this.OnPublicHolidayIdChanging(value);
					this.SendPropertyChanging();
					this._PublicHolidayId = value;
					this.SendPropertyChanged("PublicHolidayId");
					this.OnPublicHolidayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIdentifier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateIdentifier
		{
			get
			{
				return this._DateIdentifier;
			}
			set
			{
				if ((this._DateIdentifier != value))
				{
					this.OnDateIdentifierChanging(value);
					this.SendPropertyChanging();
					this._DateIdentifier = value;
					this.SendPropertyChanged("DateIdentifier");
					this.OnDateIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime NOT NULL")]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _EmailAddress;
		
		private string _Password;
		
		private int _Role;
		
		private string _Notes;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<ServerAction> _ServerActions;
		
		private EntitySet<ServerError> _ServerErrors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(int value);
    partial void OnRoleChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public User()
		{
			this._ServerActions = new EntitySet<ServerAction>(new Action<ServerAction>(this.attach_ServerActions), new Action<ServerAction>(this.detach_ServerActions));
			this._ServerErrors = new EntitySet<ServerError>(new Action<ServerError>(this.attach_ServerErrors), new Action<ServerError>(this.detach_ServerErrors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL")]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NChar(10)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerAction", Storage="_ServerActions", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ServerAction> ServerActions
		{
			get
			{
				return this._ServerActions;
			}
			set
			{
				this._ServerActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerError", Storage="_ServerErrors", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ServerError> ServerErrors
		{
			get
			{
				return this._ServerErrors;
			}
			set
			{
				this._ServerErrors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServerActions(ServerAction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ServerActions(ServerAction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ServerErrors(ServerError entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ServerErrors(ServerError entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
